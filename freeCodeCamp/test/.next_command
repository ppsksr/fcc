builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto -a
cd freeCodeCamp/
ls --color=auto
cd test/
ls --color=auto
ls --color=auto
cd ..
cd ..
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello terminal
pwd
ls --color=auto
cd freeCodeCamp/
pwd
ls --color=auto
cd test
pwd
ls --color=auto
cd freeCodeCamp
cd ..
ls --color=auto
more package.json
clear
ls --color=auto
cd node_modules/
ls --color=auto
ls --color=auto -l
cd has
ls --color=auto
__vsc_prompt_cmd_original
more README.md
ls --color=auto
more LICENSE-MIT
__vsc_prompt_cmd_original
clear
ls --color=auto
cd src/
pwd
ls --color=auto
more index.js
cd ../..
cd has
cd ..
pwd
cd ../..
ls --color=auto
clear
__vsc_prompt_cmd_original
mkdr website
mkdir website
ls --color=auto
cd website/
ls --color=auto
echo hello website
touch index.html
touch style.css
rm style.css
touch styles.css
ls --color=auto
__vsc_prompt_cmd_original
touch index.js
touch .gitignore
ls --color=auto
ls --color=auto --help
ls --color=auto -a
cd .
touch background.jpg
touch header.png
touch footer.jpg
rm footer.jpg
touch footer.jpeg
ls --color=auto
touch roboto.font
touch lato.font
touch menlo.font
ls --color=auto
touch CodeAlly.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
__vsc_prompt_cmd_original
ls --color=auto
mkdir images
ls --color=auto
cp background.jpg images
cd images/
l
ls --color=auto
cd ..
ls --color=auto
rm background.jpg
ls --color=auto
cp header.png images/
cp footer.jpeg images/
cd images/
ls --color=auto
cd ..
ls --color=auto
rm header.png
rm footer.jpeg
ls --color=auto
__vsc_prompt_cmd_original
mv roboto.font roboto.woff
ls --color=auto
mv lato.font lato.ttf
mv menlo.font menlo.otf
ls --color=auto
__vsc_prompt_cmd_original
ls --color=auto
mkdir fonts
ls --color=auto
mv roboto.woff fonts/
find
mv lato.ttf fonts/
mv menlo.otf fonts/
find
mkdir client
mkdir client/src
mv index.html client/src/
find
mv index.js client/src/
mv styles.css client/src/
find
find client
find help
find --help
ls --color=auto
find -name index.html
cd freeCodeCamp/reset_files/
ls --color=auto
cd website/
ls --color=auto
cd ..
ls --color=auto
mv website/ ..
ls --color=auto
cd ..
ls --color=auto
mv website/ ..
ls --color=auto
cd ..
ls --color=auto
cd website
ls --color=auto
find -name index.html
cd ../freeCodeCamp/
more reset.h
ls --color=auto
cat reset.sh
cd ..
l
ls --color=auto
cd website/
find -name styles.ss
find -name styles.cdd
find -name styles.css
find -name src
find
cd client/
ls --color=auto
mkdir assets
cd assets/
mkdir images
cd images/
pwd
touch background.jpg
cd ../../..
cd images
ls --color=auto
pwd
mv header.png ..
ls --color=auto
cd ..
ls --color=auto
find -name images
mv header.png client/assets/images/
find header.png
find -name header.png
find -name footer.jpeg
mv images/footer.jpeg client/assets/images/
find
rmdir images
ls --color=auto images/
rm images/background.jpg
rmdir images/
ls --color=auto
mkdir client/assets/icons
mv CodeAlly.svg client/assets/icons/
find
mv CodeRoad.svg client/assets/icons/
mv freeCodeCamp.svg client/assets/icons/
find
mkdir client/assets/fonts
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find client/assets/fonts/
touch client/assets/fonts/lsto-bold.ttf
rm client/assets/fonts/lsto-bold.ttf
touch client/assets/fonts/lato-bold.tff
rm client/assets/fonts/lato-bold.tff
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
find
rm --hrlp
rm --help
ls --color=auto
pwd
rm -r fonts/
ls --color=auto
